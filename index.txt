Part 1
1. The complete source code :
    - training_computervision_mnist.ipynb or training_computervision_mnist.py
2. The Python environment:
    - requirements.txt
3. A checkpoint file containing a trained model
    - minst_training.h5
4. The performance of your model
    - reported in the jupyter notebook 
    - accuracy 98,3%
    - performance evaluation figures : confusion matrix.png , loss evaluation.png , acc evaluation.png
    - Classification report for classifier <keras.engine.sequential.Sequential object at 0x7f32d64cbf10>:
              precision    recall  f1-score   support

           0       0.99      0.99      0.99       980
           1       1.00      0.99      0.99      1135
           2       0.99      0.99      0.99      1032
           3       0.98      0.98      0.98      1010
           4       0.98      0.99      0.98       982
           5       0.98      0.98      0.98       892
           6       0.98      0.99      0.98       958
           7       0.98      0.99      0.98      1028
           8       0.99      0.97      0.98       974
           9       0.99      0.98      0.98      1009

    accuracy                           0.98     10000
   macro avg       0.98      0.98      0.98     10000
weighted avg       0.98      0.98      0.98     10000

5. A readme briefly explaining how to reproduce your results
    - ./README

Part 2
1. The complete source code
    - in folder MnistDigistsClassificationWebApp
2. The Python environment
    - same as part 1
3. A readme briefly explaining how to run the Web API
    - same as part 1